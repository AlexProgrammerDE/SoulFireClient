{
  "locale": "Locale",
  "cancel": "Cancel",
  "error": {
    "noAddressOrToken": "No server address or token found",
    "page": {
      "title": "Error",
      "description": "An error occurred while trying to load the page. More information can be found in the console.",
      "logOut": "Log out",
      "reloadPage": "Reload page"
    },
    "connectionFailed": "Connection to the SoulFire server failed."
  },
  "notFound": {
    "page": {
      "title": "Not found",
      "description": "Could not find a page at this location",
      "logOut": "Log out",
      "reloadPage": "Reload page"
    }
  },
  "pending": {
    "connecting": "Connecting..."
  },
  "dialog": {
    "about": {
      "title": "About SoulFire",
      "description": "You are running version {{version}} of the SoulFire client.",
      "type": "Type",
      "value": "Value",
      "fields": {
        "operatingSystem": "Operating System",
        "platform": "Platform",
        "locale": "Locale",
        "architecture": "Architecture",
        "environment": "Environment",
        "browser": "Browser"
      },
      "close": "Close"
    },
    "createInstance": {
      "title": "Create a new instance",
      "description": "Instances need friendly names for you to distinguish them. It can be any name you want, for example, \"My Minecraft Bot\".",
      "form": {
        "friendlyName": {
          "label": "Friendly name",
          "placeholder": "My Minecraft Bot",
          "description": "The name you want to give to this instance.",
          "min": "The friendly name must be at least 3 characters long.",
          "max": "The friendly name must be at most 32 characters long.",
          "regex": "Friendly name must contain only letters, numbers, and spaces"
        },
        "cancel": "Cancel",
        "create": "Create"
      },
      "createToast": {
        "loading": "Creating instance...",
        "success": "Instance created successfully",
        "error": "Failed to create instance"
      }
    },
    "import": {
      "main": {
        "fromFile": "From file",
        "fromUrl": "From URL",
        "firstClipboardItem": "You had multiple items in the clipboard, only using first one.",
        "fromClipboard": "From clipboard",
        "textarea": {
          "placeholder": "Put text here...",
          "submit": "Load from text"
        }
      },
      "url": {
        "description": "Loading from URL will make the SoulFire server make a GET request to the target server and use the response as the data.",
        "form": {
          "url": {
            "placeholder": "Put URL here...",
            "empty": "Please enter a valid URL"
          }
        },
        "submit": "Load from URL",
        "toast": {
          "loading": "Downloading data...",
          "success": "Data loaded!",
          "error": "Failed to download data"
        }
      }
    }
  },
  "commandInput": {
    "placeholder": "Enter command (type 'help' for list)"
  },
  "controls": {
    "start": "Start",
    "resume": "Resume",
    "pause": "Pause",
    "stop": "Stop",
    "startToast": {
      "loading": "Starting attack...",
      "success": "Attack started successfully",
      "error": "Failed to start attack"
    },
    "resumeToast": {
      "loading": "Resuming attack...",
      "success": "Attack resumed successfully",
      "error": "Failed to resume attack"
    },
    "pauseToast": {
      "loading": "Pausing attack...",
      "success": "Attack paused successfully",
      "error": "Failed to pause attack"
    },
    "stopToast": {
      "loading": "Stopping attack...",
      "success": "Attack stopped successfully",
      "error": "Failed to stop attack"
    }
  },
  "icon": {
    "invalidName": "Invalid icon name: {{name}}"
  },
  "dataTable": {
    "noResults": "No results.",
    "rowsSelected": "{{amount}} of {{total}} row(s) selected",
    "rowsPerPage": "Rows per page",
    "currentPage": "Page {{page}} of {{total}}",
    "goFirst": "Go to first page",
    "goPrevious": "Go to previous page",
    "goNext": "Go to next page",
    "goLast": "Go to last page",
    "selectAll": "Select all",
    "selectRow": "Select row"
  },
  "pluginCard": {
    "version": "Version: {{version}}",
    "author": "Author: {{author}}",
    "license": "License: {{license}}",
    "website": "Website"
  },
  "settingsPage": {
    "namespacesNotFound": "Settings namespaces not found",
    "stringList": {
      "placeholder": "Add a new entry...",
      "add": "Add",
      "remove": "Remove"
    },
    "invalidNumberToast": {
      "title": "Invalid number!",
      "description": "The value must be between {{min}} and {{max}}"
    }
  },
  "terminal": {
    "noLogs": "ðŸ§™ Looks like there are no logs to display; try running some commands!",
    "demo-1": "Welcome to demo mode! ðŸ§ª",
    "demo-2": "This is a read-only instance of SoulFire",
    "demo-3": "Check out all the menus and features before deciding to install SoulFire :D",
    "demo-4": "Feel free to join our Discord server if you would like to reach out: https://soulfiremc.com/discord"
  },
  "uiBreadcrumb": {
    "more": "More"
  },
  "uiDialog": {
    "close": "Close"
  },
  "uiSheet": {
    "close": "Close"
  },
  "uiSidebar": {
    "toggle": "Toggle Sidebar"
  },
  "castMenu": {
    "title": "Cast",
    "disconnected": "Disconnected from {{device}}",
    "alreadyConnected": "Already connected to {{device}}",
    "connectToast": {
      "loading": "Connecting to {{device}}...",
      "success": "Connected to {{device}}",
      "error": "Failed to connect to {{device}}"
    },
    "noDevices": "No devices found",
    "broadcastLabel": "Broadcast test",
    "broadcastToast": {
      "loading": "Broadcasting message...",
      "success": "Message broadcasted!",
      "error": "Failed to broadcast message"
    }
  },
  "instanceSidebar": {
    "readDocumentation": "Read documentation",
    "backToDashboard": "Back to dashboard",
    "deleteToast": {
      "loading": "Deleting instance...",
      "success": "Instance deleted",
      "error": "Failed to delete instance"
    },
    "instancesGroup": "Instances",
    "createInstance": "Create Instance",
    "loadProfileToast": {
      "loading": "Loading profile...",
      "success": "Profile loaded",
      "error": "Failed to load profile"
    },
    "loadProfile": "Load Profile",
    "loadFromFile": "Load from file",
    "profileSaved": "Profile saved",
    "saveProfile": "Save Profile",
    "deleteInstance": "Delete Instance",
    "controlsGroup": "Controls",
    "overview": "Overview",
    "terminal": "Terminal",
    "audit-log": "Audit Log",
    "settingsGroup": "Settings",
    "pluginsGroup": "Plugins",
    "pluginSettings": "Plugin Settings",
    "botSettings": "Bot Settings",
    "accountSettings": "Account Settings",
    "metaSettings": "Instance Settings",
    "proxySettings": "Proxy Settings",
    "aiSettings": "AI Settings",
    "discoverPlugins": "Plugins",
    "instanceScripts": "Scripts"
  },
  "userSidebar": {
    "readDocumentation": "Read documentation",
    "userGroup": "User",
    "instances": "Instances",
    "access": "Access",
    "createInstance": "Create Instance",
    "settings": "Settings",
    "adminGroup": "Admin",
    "adminOverview": "Overview",
    "adminLogs": "Logs",
    "adminTerminal": "Terminal",
    "users": "Users",
    "adminScripts": "Scripts",
    "serverSettings": "Server Settings",
    "devSettings": "Dev Settings",
    "theme": {
      "title": "Theme",
      "system": "System",
      "light": "Light",
      "dark": "Dark"
    },
    "terminal": {
      "title": "Terminal"
    },
    "configDir": "Config directory",
    "dataDir": "Data directory",
    "about": "About",
    "logOut": "Log out",
    "logOutToast": {
      "loading": "Logging out...",
      "success": "Logged out",
      "error": "Failed to log out"
    },
    "exit": "Exit",
    "stopImpersonating": "Stop impersonating",
    "helpTranslate": "Translate SoulFire"
  },
  "sidebar": {
    "documentation": "Documentation",
    "buyMeACoffee": "Buy me a coffee",
    "discord": "Discord"
  },
  "breadcrumbs": {
    "admin": "Admin",
    "settings": "Settings",
    "controls": "Controls",
    "plugins": "Plugins"
  },
  "noInstancesFound": "No instances found",
  "pageName": {
    "terminal": "Terminal",
    "logs": "Logs",
    "audit-log": "Audit Log",
    "instances": "Instances",
    "access": "Access",
    "settings": "Settings",
    "proxySettings": "Proxy Settings",
    "overview": "Overview",
    "users": "Users",
    "accountSettings": "Account Settings",
    "metaSettings": "Instance Settings",
    "discoverPlugins": "Plugins",
    "adminScripts": "Scripts",
    "instanceScripts": "Scripts"
  },
  "access": {
    "webdav": {
      "title": "WebDAV Access",
      "description": "SoulFire allows you to access instance, script and other files using the WebDAV protocol.",
      "publicAddress": "Public WebDAV Address",
      "personalToken": "Personal WebDAV Token",
      "securityWarning": "Your personal WebDAV Token is very important. Do not share it with anyone. It is used to authenticate you when accessing your files. Use it as your WebDAV password when connecting. Username is not required, if you are prompted for one, you can use any value you want. (e.g. 'soulfire')",
      "addressDescription": "This is the address you need to use to access your files. Sometimes you need to use dav:// or davs:// instead of http(s)://."
    },
    "api": {
      "title": "API Access",
      "description": "SoulFire's gRPC HTTP API allows you to interact with your instances programmatically using web requests.",
      "publicAddress": "Public API Address",
      "personalToken": "Personal API Token",
      "securityWarning": "Your personal API Token is very important. Do not share it with anyone. It is used to authenticate you when accessing the API.",
      "addressDescription": "This is the address you need to use to access the API."
    },
    "token": {
      "generate": "Generate Token",
      "placeholder": "Click 'Generate Token' below",
      "generating": "Generating token...",
      "success": "Token generated successfully",
      "error": "Failed to generate token",
      "copy": "Copy Token"
    },
    "address": {
      "copy": "Copy Address"
    },
    "documentation": "Documentation",
    "howToConnect": "How to connect"
  },
  "clipboardCopy": {
    "loading": "Copying to clipboard...",
    "success": "Copied to clipboard",
    "error": "Failed to copy to clipboard"
  },
  "instanceState": {
    "starting": "Starting",
    "running": "Running",
    "paused": "Paused",
    "stopping": "Stopping",
    "stopped": "Stopped"
  },
  "auditLog": {
    "filterPlaceholder": "Filter audit logs...",
    "user": "User",
    "action": "Action",
    "timestamp": "Timestamp",
    "executedCommand": "Executed command: {{data}}",
    "startedAttack": "Started an attack",
    "resumedAttack": "Resumed an attack",
    "pausedAttack": "Paused an attack",
    "stoppedAttack": "Stopped an attack"
  },
  "pickADate": "Pick a date",
  "scripts": {
    "filterPlaceholder": "Filter scripts...",
    "baseScriptDialog": {
      "form": {
        "scriptName": {
          "min": "Script names must be at least 3 characters",
          "max": "Script names must be at most 32 characters",
          "regex": "Script names must be lowercase, begin with an alphanumeric character, followed by more alphanumeric characters or dashes, and end with an alphanumeric character.",
          "label": "Name",
          "placeholder": "My Script",
          "description": "The name of the script."
        },
        "elevatedPermissions": {
          "label": "Elevated Permissions",
          "description": "Whether the script should run with elevated permissions. Only admins can enable this option."
        }
      }
    },
    "addScriptDialog": {
      "title": "Add a new script",
      "description": "Scripts are small programs that run on the SoulFire server. They can be used to automate tasks, create custom behaviour, and more.",
      "form": {
        "cancel": "Cancel",
        "add": "Add"
      }
    },
    "updateScriptDialog": {
      "title": "Update script",
      "description": "Update the script's information.",
      "form": {
        "cancel": "Cancel",
        "update": "Update"
      }
    },
    "removeToast": {
      "loading": "Removing scripts...",
      "success": "Removed scripts!",
      "error": "Failed to remove scripts"
    },
    "addToast": {
      "loading": "Adding script...",
      "success": "Added script!",
      "error": "Failed to add script"
    },
    "updateToast": {
      "loading": "Updating script...",
      "success": "Updated script!",
      "error": "Failed to update script"
    },
    "restartToast": {
      "loading": "Restarting script...",
      "success": "Restarted script!",
      "error": "Failed to restart script"
    },
    "table": {
      "type": "Type",
      "scriptName": "Name",
      "language": "Language",
      "elevatedPermissions": "Elevated Permissions",
      "createdAt": "Created",
      "actions": "Actions"
    },
    "globalScript": "Global",
    "instanceScript": "Instance"
  }
}
